//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LfServiceReniecCliente.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IServiceReniec")]
    public interface IServiceReniec {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/validaruser", ReplyAction="http://tempuri.org/IServiceReniec/validaruserResponse")]
        System.Data.DataSet validaruser(WcfServiceReniec.ConsultaLogin loginfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/validaruser", ReplyAction="http://tempuri.org/IServiceReniec/validaruserResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> validaruserAsync(WcfServiceReniec.ConsultaLogin loginfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/RegistrartUsuario", ReplyAction="http://tempuri.org/IServiceReniec/RegistrartUsuarioResponse")]
        string RegistrartUsuario(WcfServiceReniec.ConsultaLogin userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/RegistrartUsuario", ReplyAction="http://tempuri.org/IServiceReniec/RegistrartUsuarioResponse")]
        System.Threading.Tasks.Task<string> RegistrartUsuarioAsync(WcfServiceReniec.ConsultaLogin userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/InsertUserRegDetails", ReplyAction="http://tempuri.org/IServiceReniec/InsertUserRegDetailsResponse")]
        string InsertUserRegDetails(WcfServiceReniec.RegSede regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/InsertUserRegDetails", ReplyAction="http://tempuri.org/IServiceReniec/InsertUserRegDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertUserRegDetailsAsync(WcfServiceReniec.RegSede regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/GetUserRegDetails", ReplyAction="http://tempuri.org/IServiceReniec/GetUserRegDetailsResponse")]
        System.Data.DataSet GetUserRegDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/GetUserRegDetails", ReplyAction="http://tempuri.org/IServiceReniec/GetUserRegDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUserRegDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/FetchUpdatedRecords", ReplyAction="http://tempuri.org/IServiceReniec/FetchUpdatedRecordsResponse")]
        System.Data.DataSet FetchUpdatedRecords(WcfServiceReniec.RegSede regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/FetchUpdatedRecords", ReplyAction="http://tempuri.org/IServiceReniec/FetchUpdatedRecordsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> FetchUpdatedRecordsAsync(WcfServiceReniec.RegSede regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/UpdateUserRegDetails", ReplyAction="http://tempuri.org/IServiceReniec/UpdateUserRegDetailsResponse")]
        string UpdateUserRegDetails(WcfServiceReniec.RegSede regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/UpdateUserRegDetails", ReplyAction="http://tempuri.org/IServiceReniec/UpdateUserRegDetailsResponse")]
        System.Threading.Tasks.Task<string> UpdateUserRegDetailsAsync(WcfServiceReniec.RegSede regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/DeleteUserRegDetails", ReplyAction="http://tempuri.org/IServiceReniec/DeleteUserRegDetailsResponse")]
        bool DeleteUserRegDetails(WcfServiceReniec.RegSede regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/DeleteUserRegDetails", ReplyAction="http://tempuri.org/IServiceReniec/DeleteUserRegDetailsResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserRegDetailsAsync(WcfServiceReniec.RegSede regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/BuscarNombreSede", ReplyAction="http://tempuri.org/IServiceReniec/BuscarNombreSedeResponse")]
        System.Data.DataSet BuscarNombreSede(WcfServiceReniec.RegSede regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/BuscarNombreSede", ReplyAction="http://tempuri.org/IServiceReniec/BuscarNombreSedeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarNombreSedeAsync(WcfServiceReniec.RegSede regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/BuscarDireccionSede", ReplyAction="http://tempuri.org/IServiceReniec/BuscarDireccionSedeResponse")]
        System.Data.DataSet BuscarDireccionSede(WcfServiceReniec.RegSede regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/BuscarDireccionSede", ReplyAction="http://tempuri.org/IServiceReniec/BuscarDireccionSedeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarDireccionSedeAsync(WcfServiceReniec.RegSede regdet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/BuscarSolicitudID", ReplyAction="http://tempuri.org/IServiceReniec/BuscarSolicitudIDResponse")]
        System.Data.DataSet BuscarSolicitudID(WcfServiceReniec.RegSolicitud regdetsol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/BuscarSolicitudID", ReplyAction="http://tempuri.org/IServiceReniec/BuscarSolicitudIDResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarSolicitudIDAsync(WcfServiceReniec.RegSolicitud regdetsol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/BuscarEstadoSolicitud", ReplyAction="http://tempuri.org/IServiceReniec/BuscarEstadoSolicitudResponse")]
        System.Data.DataSet BuscarEstadoSolicitud(WcfServiceReniec.RegSolicitud regdetsol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/BuscarEstadoSolicitud", ReplyAction="http://tempuri.org/IServiceReniec/BuscarEstadoSolicitudResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> BuscarEstadoSolicitudAsync(WcfServiceReniec.RegSolicitud regdetsol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/GetRegSolDetails", ReplyAction="http://tempuri.org/IServiceReniec/GetRegSolDetailsResponse")]
        System.Data.DataSet GetRegSolDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/GetRegSolDetails", ReplyAction="http://tempuri.org/IServiceReniec/GetRegSolDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetRegSolDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/EstadoSolicitud", ReplyAction="http://tempuri.org/IServiceReniec/EstadoSolicitudResponse")]
        string[] EstadoSolicitud();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/EstadoSolicitud", ReplyAction="http://tempuri.org/IServiceReniec/EstadoSolicitudResponse")]
        System.Threading.Tasks.Task<string[]> EstadoSolicitudAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/ActualizarEstadoSolicitud", ReplyAction="http://tempuri.org/IServiceReniec/ActualizarEstadoSolicitudResponse")]
        void ActualizarEstadoSolicitud(int solicitudId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceReniec/ActualizarEstadoSolicitud", ReplyAction="http://tempuri.org/IServiceReniec/ActualizarEstadoSolicitudResponse")]
        System.Threading.Tasks.Task ActualizarEstadoSolicitudAsync(int solicitudId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceReniecChannel : LfServiceReniecCliente.ServiceReference1.IServiceReniec, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceReniecClient : System.ServiceModel.ClientBase<LfServiceReniecCliente.ServiceReference1.IServiceReniec>, LfServiceReniecCliente.ServiceReference1.IServiceReniec {
        
        public ServiceReniecClient() {
        }
        
        public ServiceReniecClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceReniecClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceReniecClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceReniecClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet validaruser(WcfServiceReniec.ConsultaLogin loginfo) {
            return base.Channel.validaruser(loginfo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> validaruserAsync(WcfServiceReniec.ConsultaLogin loginfo) {
            return base.Channel.validaruserAsync(loginfo);
        }
        
        public string RegistrartUsuario(WcfServiceReniec.ConsultaLogin userInfo) {
            return base.Channel.RegistrartUsuario(userInfo);
        }
        
        public System.Threading.Tasks.Task<string> RegistrartUsuarioAsync(WcfServiceReniec.ConsultaLogin userInfo) {
            return base.Channel.RegistrartUsuarioAsync(userInfo);
        }
        
        public string InsertUserRegDetails(WcfServiceReniec.RegSede regdet) {
            return base.Channel.InsertUserRegDetails(regdet);
        }
        
        public System.Threading.Tasks.Task<string> InsertUserRegDetailsAsync(WcfServiceReniec.RegSede regdet) {
            return base.Channel.InsertUserRegDetailsAsync(regdet);
        }
        
        public System.Data.DataSet GetUserRegDetails() {
            return base.Channel.GetUserRegDetails();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUserRegDetailsAsync() {
            return base.Channel.GetUserRegDetailsAsync();
        }
        
        public System.Data.DataSet FetchUpdatedRecords(WcfServiceReniec.RegSede regdet) {
            return base.Channel.FetchUpdatedRecords(regdet);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FetchUpdatedRecordsAsync(WcfServiceReniec.RegSede regdet) {
            return base.Channel.FetchUpdatedRecordsAsync(regdet);
        }
        
        public string UpdateUserRegDetails(WcfServiceReniec.RegSede regdet) {
            return base.Channel.UpdateUserRegDetails(regdet);
        }
        
        public System.Threading.Tasks.Task<string> UpdateUserRegDetailsAsync(WcfServiceReniec.RegSede regdet) {
            return base.Channel.UpdateUserRegDetailsAsync(regdet);
        }
        
        public bool DeleteUserRegDetails(WcfServiceReniec.RegSede regdet) {
            return base.Channel.DeleteUserRegDetails(regdet);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserRegDetailsAsync(WcfServiceReniec.RegSede regdet) {
            return base.Channel.DeleteUserRegDetailsAsync(regdet);
        }
        
        public System.Data.DataSet BuscarNombreSede(WcfServiceReniec.RegSede regdet) {
            return base.Channel.BuscarNombreSede(regdet);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarNombreSedeAsync(WcfServiceReniec.RegSede regdet) {
            return base.Channel.BuscarNombreSedeAsync(regdet);
        }
        
        public System.Data.DataSet BuscarDireccionSede(WcfServiceReniec.RegSede regdet) {
            return base.Channel.BuscarDireccionSede(regdet);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarDireccionSedeAsync(WcfServiceReniec.RegSede regdet) {
            return base.Channel.BuscarDireccionSedeAsync(regdet);
        }
        
        public System.Data.DataSet BuscarSolicitudID(WcfServiceReniec.RegSolicitud regdetsol) {
            return base.Channel.BuscarSolicitudID(regdetsol);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarSolicitudIDAsync(WcfServiceReniec.RegSolicitud regdetsol) {
            return base.Channel.BuscarSolicitudIDAsync(regdetsol);
        }
        
        public System.Data.DataSet BuscarEstadoSolicitud(WcfServiceReniec.RegSolicitud regdetsol) {
            return base.Channel.BuscarEstadoSolicitud(regdetsol);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> BuscarEstadoSolicitudAsync(WcfServiceReniec.RegSolicitud regdetsol) {
            return base.Channel.BuscarEstadoSolicitudAsync(regdetsol);
        }
        
        public System.Data.DataSet GetRegSolDetails() {
            return base.Channel.GetRegSolDetails();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetRegSolDetailsAsync() {
            return base.Channel.GetRegSolDetailsAsync();
        }
        
        public string[] EstadoSolicitud() {
            return base.Channel.EstadoSolicitud();
        }
        
        public System.Threading.Tasks.Task<string[]> EstadoSolicitudAsync() {
            return base.Channel.EstadoSolicitudAsync();
        }
        
        public void ActualizarEstadoSolicitud(int solicitudId) {
            base.Channel.ActualizarEstadoSolicitud(solicitudId);
        }
        
        public System.Threading.Tasks.Task ActualizarEstadoSolicitudAsync(int solicitudId) {
            return base.Channel.ActualizarEstadoSolicitudAsync(solicitudId);
        }
    }
}
